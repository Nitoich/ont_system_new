<?php

namespace App\Services;

use App\Models\Role;
use Illuminate\Http\Exceptions\HttpResponseException;

class RoleService extends Service
{
    protected $model = Role::class;

    public function create(array $fields): \Illuminate\Database\Eloquent\Model
    {

        return parent::create($fields); // TODO: Change the autogenerated stub
    }

    public function getBySlug(string $slug) {
        $role = Role::query()->where('slug', $slug)->first();
        if(!$role) {
            throw new HttpResponseException(response()->json($this->exception_NotFoundData())->setStatusCode(404));
        }
        return $role;
    }

    public function setRolePermissions(mixed $id, array $permissions_ids): void
    {
        if(is_int($id)) {
            $role = $this->getById($id);
        } else {
            $role = $id;
        }
        $role->permissions()->sync($permissions_ids);
    }

    public function update(int $id, array $fields): \Illuminate\Database\Eloquent\Model
    {
        if(isset($fields['permissions']))
        {
            $this->setRolePermissions($id, $fields['permissions']);
        }
        return parent::update($id, $fields); // TODO: Change the autogenerated stub
    }
}
